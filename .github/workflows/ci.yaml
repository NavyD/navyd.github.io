name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  # NOTE: 不要写为 `~/.cache` 会无效
  UV_CACHE_DIR: /tmp/.cache/uv
  MISE_ENV: ci

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache mise
        id: cache-mise
        if: ${{ env.ACT }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/mise
          key: act-${{runner.os}}-mise-${{hashFiles('mise.*.toml', 'mise.toml')}}
          restore-keys: |
            act-${{runner.os}}-mise-${{hashFiles('mise.*.toml', 'mise.toml')}}
            act-${{runner.os}}-mise-
      - uses: jdx/mise-action@v2
      # https://docs.astral.sh/uv/guides/integration/github/#caching
      - name: Restore uv cache
        id: uv-cache
        uses: actions/cache@v4
        with:
          path: ${{env.UV_CACHE_DIR}}
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Init venv with uv
        if: ${{ steps.uv-cache.outputs.cache-hit != 'true' }}
        run: uv venv .venv && uv sync
      - name: Minimize uv cache
        run: uv cache prune --ci
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          separator: ":"
          # set to false because we are using an environment variable to store the output and avoid command injection.
          safe_output: false
      - name: lint changed files with lefthook
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          IFS=':' read -r -a changed_files <<<"$ALL_CHANGED_FILES"
          opts=()
          for file in "${changed_files[@]}"; do
              opts+=( "--file" "$file" )
          done
          set -x
          lefthook run pre-commit "${opts[@]}"
