{{ if hugo.IsProduction }}

{{ .EnableAllLanguages }}

{{ $front_matter_sep_start := "---" }}
{{ $front_matter_sep_end := "---" }}
{{ $img_exts := slice ".png" ".jpg" ".jpeg" ".gif" ".svg" ".webp" }}
{{ $section_path := "/content/posts" }}
{{ $branch_bundle_path := path.Join $section_path "_index.md" }}
{{ $summary_len := 40 }}

{{ range partial "GetAllPaths.gotmpl" $section_path }}
    {{ $curr_path := . }}
    {{/* 跳过_index.md branch bundle文件 */}}
    {{ if eq $branch_bundle_path $curr_path }}
        {{ continue }}
    {{/* 查找所有md文件 */}}
    {{ else if eq (path.Ext $curr_path | lower) ".md" }}
        {{ $content_val := os.ReadFile $curr_path }}
        {{ $front_matter := dict }}
        {{ if strings.HasPrefix $content_val $front_matter_sep_start }}
            {{ $parts := strings.Split (strings.Substr $content_val (len $front_matter_sep_start)) $front_matter_sep_end }}
            {{/* 移除并解析front matter */}}
            {{ if gt (len $parts) 1 }}
                {{ $front_matter = index $parts 0 | unmarshal }}
                {{/* 跳过draft */}}
                {{ if and $front_matter.draft (not $.Site.BuildDrafts) }}
                    {{ continue }}
                {{ end }}
                {{ $content_val = delimit (after 1 $parts) "" }}
            {{ else }}
                {{ fmt.Errorf "Not found %s end of front matter sep %s" $front_matter_sep_end $front_matter_sep_start }}
            {{ end }}
        {{ end }}

        {{ $page_path := strings.TrimPrefix $section_path $curr_path }}
        {{/* 默认使用原路径 `name/index.md` -> `name`, `name.md` -> `name` */}}
        {{ $page_path = cond (eq (path.BaseName $curr_path) "index") (path.Dir $page_path) (strings.TrimSuffix (path.Ext $page_path) $page_path) | strings.TrimPrefix "/" }}

        {{ $title := $front_matter.title }}
        {{ if not $title }}
            {{/* 获取h1作为标题 解析`# xxx` */}}
            {{ $groups := findRESubmatch `(?m:^#\s+([^#\r\n]+)$)` $content_val 1 }}
            {{ if $groups }}
                {{ $title = index (index $groups 0) 1 }}
            {{ else }}
                {{ $title = replace (path.BaseName $curr_path) "-" " " | title }}
            {{ end }}
        {{ end }}

        {{/* 配置日期 */}}
        {{ $dates := newScratch }}
        {{ if $front_matter.date }}
            {{ time.AsTime $front_matter.date | $dates.Set "date" }}
        {{ end }}
        {{ if $front_matter.lastmod }}
            {{ time.AsTime $front_matter.lastmod | $dates.Set "lastmod" }}
        {{ else }}
            {{/* 没有lastmod时使用文件修改时间 */}}
            {{ (os.Stat $curr_path).ModTime | $dates.Set "lastmod" }}
        {{ end }}
        {{ if $front_matter.expiryDate }}
            {{ time.AsTime $front_matter.expiryDate | $dates.Set "expiryDate" }}
        {{ end }}
        {{ if $front_matter.publishDate }}
            {{ time.AsTime $front_matter.publishDate | $dates.Set "publishDate" }}
        {{ end }}
        {{ $dates = $dates.Values }}

        {{ $params := default dict $front_matter.params }}

        {{ if not $params.tags }}
            {{/* 配置标签到params中 */}}
            {{ if $front_matter.tags }}
                {{ $params = dict "tags" $front_matter.tags | merge $params }}
            {{ else }}
                {{ fmt.Warnf "Not found any tags in post %s" $curr_path }}
            {{ end }}
        {{ end }}

        {{ if not $params.image }}
            {{/* 获取首个存在的图片名作为cover */}}
            {{ range os.ReadDir (path.Dir $curr_path) }}
                {{ if in $img_exts (path.Ext .Name | lower) }}
                    {{ $params = dict "image" .Name | merge $params }}
                    {{ break }}
                {{ end }}
            {{ end }}
        {{ end }}

        {{/* 添加文章简介 */}}
        {{ if not $params.description }}
            {{ $desc := "" }}
            {{ $parts := split $content_val `<!--more-->` }}
            {{ if gt (len $parts) 1 }}
                {{ $desc = index $parts 0 | strings.TrimSpace }}
                {{/*
                NOTE: stack主题特定问题：对于description作为summary时 移除desc避免重复
                这里统一截取指定长度的字符即可
                {{ $content_val = delimit (after 1 $parts) "" }}
                */}}
            {{ else }}
                {{/*
                    由于CJK字符与len计算字节数不一致，这里使用runcount计算当前str的char数量，
                    指定4倍长度是由于一般的unicode通常最多为4个字节表示一个char（有例外但不重要了），
                    避免split所有内容节省资源。

                    获取最多4倍的字节长度的substr，分离为char后找出指定长度的字符串。

                    参考[Get char codes or generate an integer from string](https://discourse.gohugo.io/t/get-char-codes-or-generate-an-integer-from-string/37119)
                    {{ fmt.Warnf "desc slice end %#v of path %s" $desc_len $curr_path }}
                */}}
                {{ $desc_len := math.Min (mul $summary_len 4) (len $content_val) }}
                {{ $desc = substr $content_val 0 $desc_len }}
            {{ end }}
            {{/* FIXME: desc是md源码会包含如链接等字符导致未渲染的问题，transform.Markdownify不支持在这个阶段使用 */}}
            {{/* 移除链接替换为alt文本 https://stackoverflow.com/questions/37462126/regex-match-markdown-link#comment138813679_61330354 */}}
            {{ $desc = replaceRE `!?\[([^\[]*)]\(([^()]*(\([^()]*\))*[^()]*)\)` "$1" $desc | strings.TrimSpace }}
            {{ if gt (strings.RuneCount $desc) $summary_len }}
                {{/* 截取指定长度的字符串 */}}
                {{ $summary := "" }}
                {{ range split $desc "" }}
                    {{ if lt (strings.RuneCount $summary) $summary_len }}
                        {{ $summary = print $summary . }}
                    {{ else }}
                        {{ break }}
                    {{ end }}
                {{ end }}
                {{ $desc = printf "%s..." $summary }}
            {{ end }}
            {{ if $desc }}
                {{ $params = dict "description" $desc | merge $params }}
            {{ end }}
        {{ end }}

        {{/*
        {{ fmt.Warnf "test %#v" $dates }}
        {{ fmt.Errorf "params %#v" $params }}
        */}}
        {{ $page := dict
            "content" (dict "value" $content_val)
            "params" $params
            "path" $page_path
            "title" $title
            "dates" $dates
        }}
        {{ $.AddPage $page }}

        {{/* TODO: 添加section相关的resouces */}}
    {{ end }}
{{ end }}

{{ end }}

{{/*
{{ fmt.Warnf "data: %#v" (.Site.BuildDrafts)}}
*/}}
