[{"content":"使用markdown写作有一个痛点，如何链接本地文件。如图片、本地md文件链接、其它博文相关文件log等，一般在workspace目录中放置一个assets/images目录，md文件会链接到该路径。\n1 2 3 4 5 6 7  workspaces/ - assets/ - images/ - files/ - posts/ - myblog.md - test/a.md   但是这样存在一个问题，大量文件被放在一个不相关的地方，在需要时很难寻找。一旦md文件目录发生迁移，整个md文件中的链接都失效了。\n在hugo中目录结构如果md存在多种本地文件链接，则用一个文件夹放入一个index.md与对应文件在同个目录\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ├── archetypes ├── config.toml ├── content - posts/ - blog.md - multi-res/ - index.md - a.png - b.log - c.file ├── data ├── layouts ├── static └── themes   但是这里选择一个filename.md文件被build后会生成无后缀的filename/目录，里面存放相关的静态资源文件，如果md没有本地文件链接不需要文件夹。将一个md文件相关资源都放在这样的目录中非常方便：\n1 2 3 4 5 6 7 8 9 10  workspaces/ - content/posts/ - alone.md - myblog.md - myblog/ - a.log - b.html - c.png - public/ - ...   在vscode中配合 Markdown Link Updater重命名文件后对应链接也会被修改\n使用 GitHub Action - Markdown link check可以在github repo中检查link的有效性\n参考：\n  Hugo 的文件管理方案  Directory Structure  CONTENT MANAGEMENT Content Sections  Hugo 从入门到会用  hugo解决方案 预处理markdown link 由于当前目录结构与hugo官方不一致，导致本地相对链接无法正常使用如：\n1 2 3 4 5 6 7 8 9 10  \u0026lt;!-- 结构： myblog.md myblog/  - vim_wordpress_esc  - 2021-08-04-23-17-08.png --\u0026gt; [vim_wordpress_esc](myblog/vim_wordpress_esc) ![](myblog/2021-08-04-23-17-08.png)   对于上面的两个本地链接，hugo 构建后\n1 2 3  \u0026lt;a href=\u0026#34;myblog/vim_wordpress_esc\u0026#34;\u0026gt;vim_wordpress_esc\u0026lt;/a\u0026gt; \u0026lt;!-- 配置了 fancybox = true --\u0026gt; \u0026lt;a class=\u0026#34;fancybox\u0026#34; href=\u0026#34;http://localhost:1313/post/myblog/myblog/2021-08-04-23-17-08.png\u0026#34; data-fancybox=\u0026#34;gallery\u0026#34; data-caption=\u0026#34;\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;myblog/2021-08-04-23-17-08.png\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;   很明显，blog.md被hugo后本地路径已经与myblog/文件夹一级，而其中的相对路径链接还是没有变化，应该移除对应的filename前缀如：\u0026lt;a href=\u0026quot;vim_wordpress_esc\u0026quot;\u0026gt;vim_wordpress_esc\u0026lt;/a\u0026gt;\ntemplate in markdown 有一种简单的方式可以实现，在markdown文件中嵌入hugo template，可以使重写对应的链接如：\n1 2 3  \u0026lt;base href=\u0026#34;{{ .Site.BaseURL }}\u0026#34;\u0026gt; \u0026lt;!-- 访问：https://host.url/img/foo.jpg --\u0026gt; ![Foo image](img/foo.jpg)   注意：上面的代码仅用于演示，实际中存在改写base url后导致其它相对链接无法正常工作\n下面是简单的处理逻辑：对于myblog.md，在当前页面下，如果存在以页面url.path的最后一层即filename开始的href，如：url=http://localhost:1313/post/myblog, url.path=/post/myblog, filename=myblog, href=myblog/vim_wordpress_esc，则移除这一级的href=vim_wordpress_esc\n参考：\n  Cannot link to static files with Hugo  js 开始的思路是使用js在页面加载时将对应href重写。但是看到\u0026lt;a class=\u0026quot;fancybox\u0026quot; href=\u0026quot;http://localhost:1313/post/myblog/myblog/2021-08-04-23-17-08.png\u0026quot;就发现使用js无法保证所有对应的href被处理，可能由于加载顺序导致异常。如果link过多可能会影响性能\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  let list = window.location.pathname.split(\u0026#34;/\u0026#34;).filter(name =\u0026gt; name.length \u0026gt; 0); console.info(\u0026#34;got path list: \u0026#34;, list); if (list.length != 0) { let last = list[list.length - 1]; console.log(\u0026#34;check all ref tag\u0026#34;); for (let item of document.getElementsByTagName(\u0026#34;a\u0026#34;)) { let href = item.getAttribute(\u0026#34;href\u0026#34;); console.log(\u0026#34;href \u0026#34;, href) if (href.startsWith(window.location.href)) { // console.log(\u0026#34;href \u0026#34;, href);  href = href.substring(window.location.href.length + 1); } if (href.startsWith(last)) { let newRef = href.substring(last.length + 1); item.setAttribute(\u0026#34;href\u0026#34;, newRef); console.info(\u0026#34;replaced \u0026#34;, href, \u0026#34; with \u0026#34;, newRef); } } }   render hooks 在markdown渲染时预处理链接最合适，如果不行，就只能回到hugo标准目录结构了。\nMarkdown Render Hooks配合hugo template可以在渲染html时处理链接。定义下面的文件可以处理对应的链接类型\n1 2 3 4 5 6  layouts └── _default └── _markup ├── render-image.html ├── render-image.rss.xml └── render-link.html   下面是render-link.html代码\n1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;a test=\u0026#34;\u0026#34; {{$name := path.Base .Page.Permalink}} {{if (hasPrefix .Destination $name) }} {{$size := len $name}} {{$size = add $size 1}} {{$destUrl := substr .Destination $size}} href=\u0026#34;{{substr .Destination $size}}\u0026#34; {{else}} href=\u0026#34;{{.Destination | safeURL}}\u0026#34; {{end}} {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34;{{ end }}\u0026gt;{{ .Text | safeHTML }}\u0026lt;/a\u0026gt;   参考：\n  Configure Markup: Markdown Render Hooks  Markdown pre-processing?  How to get the URL of the current page with the rel or relref function?  Functions Quick Reference  问题 在完成上面的工作后，未使用permalinks是正常可用的。一旦启用permalinks，所有在md文件同名文件夹下的都无法迁移到新的permalinks目录下\n使用同名目录play-store-failed-to-download-in-clash-proxy.md, play-store-failed-to-download-in-clash-proxy/部分构建结果:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  public/post ├── 2021 │ └── 08 │ ├── 09 │ ├── clash-transparent-proxy │ │ └── index.html │ └── play-store-failed-to-download-in-clash-proxy │ └── index.html ├── index.html ├── index.xml └── tools └── play-store-failed-to-download-in-clash-proxy ├── 2021-08-09-17-57-48.png ├── 2021-08-09-18-06-18.gif ├── 2021-08-09-18-09-35.png ├── 2021-08-09-18-14-35.png ├── 2021-08-09-18-19-06.png ├── 2021-08-09-18-34-55.png ├── 2021-08-09-18-44-36.png ├── 2021-08-09-19-13-51.png └── 2021-08-26-01-49-06.png   下面是使用标准目录play-store-failed-to-download-in-clash-proxy/index.md部分构建结果:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  public/post ├── 2021 │ └── 08 │ ├── 09 │ │ ├── clash-transparent-proxy │ │ │ └── index.html │ │ └── play-store-failed-to-download-in-clash-proxy │ │ ├── 2021-08-09-17-57-48.png │ │ ├── 2021-08-09-18-06-18.gif │ │ ├── 2021-08-09-18-09-35.png │ │ ├── 2021-08-09-18-14-35.png │ │ ├── 2021-08-09-18-19-06.png │ │ ├── 2021-08-09-18-34-55.png │ │ ├── 2021-08-09-18-44-36.png │ │ ├── 2021-08-09-19-13-51.png │ │ ├── 2021-08-26-01-49-06.png │ │ └── index.html ├── index.html ├── index.xml └── tools └── play-store-failed-to-download-in-clash-proxy ├── 2021-08-09-17-57-48.png ├── 2021-08-09-18-06-18.gif ├── 2021-08-09-18-09-35.png ├── 2021-08-09-18-14-35.png ├── 2021-08-09-18-19-06.png ├── 2021-08-09-18-34-55.png ├── 2021-08-09-18-44-36.png ├── 2021-08-09-19-13-51.png └── 2021-08-26-01-49-06.png   暂时还不清楚要在标准目录中hugo如何移动对应的资源文件。但是非标准目录要这样的代价不如使用标准目录，避免一堆问题\n参考：\n  调整了下 Hugo 永久链接生成配置  CONTENT MANAGEMENT Page Bundles  Single Page Templates  ","permalink":"https://blog.navyd.xyz/post/2021/08/27/markdown-management-in-hugo/","summary":"使用markdown写作有一个痛点，如何链接本地文件。如图片、本地md文件链接、其它博文相关文件log等，一般在workspace目录中放置","title":"在hugo中管理markdown文件"},{"content":"问题 在wsl命令行中使用cargo doc --open无法在windows端打开\n分析 在wsl命令行中是可以直接执行windows exe文件的，ubuntu中预置了 wslu工具，其中的wslview可以满足要求\n A fake WSL browser that can help you open link in default Windows browser or open files on Windows.\n 在wsl命令行中使用wslview可以用windows的默认程序打开文件\n1 2  # 使用默认文本处理程序打开 wslview test.txt   尝试更新wslview为默认浏览器\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  $ wslview --help wslview - Part of wslu, a collection of utilities for Windows 10 Windows Subsystem for Linux Usage: wslview (--register|--unregister|--help|--version) [LINK] For more help for wslview, visit the following site: https://github.com/wslutilities/wslu/wiki/wslview $ wslview --version wslu v2.3.6; wslview v06 $ wslview --register [sudo] password for navyd: $ update-alternatives --list x-www-browser /usr/bin/wslview # empty $ echo $BROWSER $ file $(which x-www-browser) /usr/bin/x-www-browser: symbolic link to /etc/alternatives/x-www-browser $ file /etc/alternatives/x-www-browser /etc/alternatives/x-www-browser: symbolic link to /usr/bin/wslview $ file /usr/bin/wslview /usr/bin/wslview: Bourne-Again shell script, ASCII text executable $ head -n 2 /usr/bin/wslview #!/bin/bash # wslu - Windows 10 linux Subsystem Utility   可以看到wslview脚本确实成为了wsl中的浏览器，但是cargo依然无法打开，应该是cargo依赖的是环境变量而不是xserver环境。\n注意：当前版本wslu v2.3.6; wslview v06存在无法打开绝对路径bug： wslview open file by absolute path failed #118\n1 2 3 4 5 6 7 8  $ wslview /home/panjie/temp/aaa.docx Start : 由于出现以下错误，无法运行此命令: 系统找不到指定的文件。。 所在位置 行:1 字符: 1 + Start \u0026#34;/home/panjie/temp/aaa.docx\u0026#34; + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : InvalidOperation: (:) [Start-Process]，InvalidOperationException + FullyQualifiedErrorId : InvalidOperationException,Microsoft.PowerShell.Commands.StartProcessCommand   解决方案 file protocol 以ubuntu为例，创建文件~/open_browser.sh并添加执行权限，在.bashrc或.zshrc中添加下面代码，注意file://///wsl$不能改为file:///wsl$。\n1 2 3 4 5 6 7 8 9 10 11 12  # ~/open_browser.sh # chrome browser=\u0026#39;/mnt/c/Program Files/Google/Chrome/Application/chrome.exe\u0026#39; # 如果不是ubuntu则需要修改对应目录 如果输入$1为相对路径则转为绝对路径 file_path=\u0026#34;file://///wsl$//Ubuntu$([[ \u0026#34;$1\u0026#34; = /* ]] \u0026amp;\u0026amp; echo \u0026#34;$1\u0026#34; || echo \u0026#34;$(pwd)/$1\u0026#34;)\u0026#34; $browser \u0026#34;$file_path\u0026#34; # 执行权限 chmod +x ~/open_browser.sh # .zshrc export BROWSER=\u0026#34;$HOME/open_browser.sh\u0026#34;   cargo还允许配置 doc.browser覆盖环境变量BROWSER，如在/.cargo/config.toml或当前项目的config.toml中指定\n1 2 3  # ... [doc] browser = \u0026#34;$HOME/open_browser.sh\u0026#34;   wslu-wslview 从 wslview sh源码上看还是使用了file协议，功能更强大，但是需要更新默认版本wslu v2.3.6\n1 2 3 4 5 6 7 8 9 10 11 12  wslview --version # wslu v2.3.6; wslview v06 # 更新wslu sudo add-apt-repository ppa:wslutilities/wslu sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade wslview --version # wslu v3.2.2-1; wslview v10 # 在`~/.zshrc`中添加 export BROWSER=\u0026#34;wslview\u0026#34;   http server python3自带一个http server，在workspace中运行\n1 2  # --directory DIRECTORY port python3 -m http.server --directory target/doc/$crate_name 8000   注意：\n --directory在python3.7可用 $crate_name通常是当前目录名 - to _如：a-b -\u0026gt; target/doc/a_b  参考：\n  cargo doc \u0026ndash;open doesn\u0026rsquo;t work in WSL #7557  cargo doc \u0026ndash;open should start a web server to enable keyboard accessibility #4966  The Cargo Book cargo-doc(1)  http.server — HTTP servers  Check If Shell Script $1 Is Absolute Or Relative Path [duplicate]  file URI scheme How many slashes?  How can I “open” a file from WSL with the default application?  What\u0026rsquo;s the difference between x-www-browser and gnome-www-browser?  wslu  ","permalink":"https://blog.navyd.xyz/post/2021/08/26/cargo-doc-open-does-not-work-in-wsl/","summary":"问题 在wsl命令行中使用cargo doc --open无法在windows端打开 分析 在wsl命令行中是可以直接执行windows exe文件的，ub","title":"Cargo Doc Open Does Not Work in Wsl"},{"content":"Snipaste  Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上！下载并打开 Snipaste，按下 F1 来开始截图，再按 F3，截图就在桌面置顶显示了。就这么简单！\n你还可以将剪贴板里的文字或者颜色信息转化为图片窗口，并且将它们进行缩放、旋转、翻转、设为半透明，甚至让鼠标能穿透它们！如果你是程序员、设计师，或者是大部分工作时间都在电脑前，贴图功能将改变你的工作方式、提升工作效率。\n 可以查看颜色代码，不用qq的截图了\n参考：\n  官网  in microsoft store ","permalink":"https://blog.navyd.xyz/post/2021/08/26/common-softwares/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"2021-08-29-15-01-24.png\" alt=\"\"  /\u003e\n\u003c/p\u003e","title":"常用软件"},{"content":"docker部署 在docker内启动时使用iptables操作，stop时清理iptables。\n  自用docker镜像  NavyD/docker-clash  代理方式 TCP redir + UDP TPROXY redir模式。对转发流量使用tcp redir, udp tproxy方式代理。本机仅代理tcp，支持docker内部代理。支持fakeip但存在icmp无法回应的问题（tcp udp没有问题），tun-fakeip可以提供更好的服务。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  # local  # 接管clash宿主机内部流量 iptables -t nat -N CLASH iptables -t nat -F CLASH # private setup_private nat CLASH # 过滤本机clash流量 避免循环 user无法使用代理 iptables -t nat -A CLASH -m owner --uid-owner \u0026#34;$RUNNING_UID\u0026#34; -j RETURN iptables -t nat -A CLASH -p tcp -j REDIRECT --to-port \u0026#34;$REDIR_PORT\u0026#34; iptables -t nat -A OUTPUT -j CLASH # 转发流量 tcp redir iptables -t nat -N CLASH_EXTERNAL iptables -t nat -F CLASH_EXTERNAL # google dns first iptables -t nat -A CLASH_EXTERNAL -p tcp -d 8.8.8.8 -j REDIRECT --to-port \u0026#34;$REDIR_PORT\u0026#34; iptables -t nat -A CLASH_EXTERNAL -p tcp -d 8.8.4.4 -j REDIRECT --to-port \u0026#34;$REDIR_PORT\u0026#34; # private setup_private nat CLASH_EXTERNAL # tcp redir iptables -t nat -A CLASH_EXTERNAL -p tcp -j REDIRECT --to-port \u0026#34;$REDIR_PORT\u0026#34; iptables -t nat -A PREROUTING -j CLASH_EXTERNAL # 转发流量 udp tproxy iptables -t mangle -N CLASH_EXTERNAL iptables -t mangle -F CLASH_EXTERNAL # private setup_private mangle CLASH_EXTERNAL # udp tproxy redir iptables -t mangle -A CLASH_EXTERNAL -p udp -j TPROXY --on-port \u0026#34;$REDIR_PORT\u0026#34; --tproxy-mark $MARK_ID iptables -t mangle -A PREROUTING -j CLASH_EXTERNAL # route udp ip rule add fwmark $MARK_ID table $TABLE_ID ip route add local default dev lo table $TABLE_ID   参考：\n  Clash TProxy Mode  clash本机做透明代理iptables规则请教  Fake IP 模式如何直接转发icmp包（无法Ping任何网站）  iptables处理icmp转发  使用 iptables 透明代理 TCP 与 UDP  TCP\u0026amp;UDP TPROXY clash支持tcp tproxy，可以使用tcp tproxy避免在nat中重定向定义多个chain\n在配置文件config.yaml中增加：\n1 2  # Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)tproxy-port:7893  本机代理与TCP redir相似，下面是透明代理\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  # ROUTE RULES ip rule add fwmark $MARK_ID table $TABLE_ID ip route add local default dev lo table $TABLE_ID # CREATE TABLE iptables -t mangle -N clash # RETURN LOCAL AND LANS setup_private mangle clash # FORWARD ALL iptables -t mangle -A clash -p udp -j TPROXY --on-port $REDIR_PORT --tproxy-mark $MARK_ID iptables -t mangle -A clash -p tcp -j TPROXY --on-port $REDIR_PORT --tproxy-mark $MARK_ID # REDIRECT iptables -t mangle -A PREROUTING -j clash   参考：\n  Add TCP TPROXY support  Clash 作为网关的透明代理  v2ray 透明代理(TPROXY)  TUN 适用于tun-redir,tun-fakeip，代理本机与外部流量。在iptables mangle中设置mark并过滤内部私有地址、过滤指定运行clash uid的流量防止循环。\n本机docker内部网络无法直接被代理，如果不-s 172.16.0.0/12 -j RETURN则docker内部无法ping到外部网络，可能是在mangle表后路由到tun设备后无法被iptables nat中的DOCKER链处理。\n使用-i \u0026quot;$TUN_NAME\u0026quot; -j RETURN防止docker内部流量被mark循环到tun接口。具体可行原因未知todo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # 代理本机与外部流量。在iptables mangle中设置mark并过滤内部私有地址、 # 过滤指定运行clash uid的流量防止循环。允许本机与docker通过代理 ## 接管clash宿主机内部流量 iptables -t mangle -N CLASH iptables -t mangle -F CLASH # filter clash traffic running under uid 注意顺序 owner过滤 要在 set mark之前 iptables -t mangle -A CLASH -m owner --uid-owner \u0026#34;$RUNNING_UID\u0026#34; -j RETURN # private local_iptables mangle CLASH # mark iptables -t mangle -A CLASH -j MARK --set-xmark $MARK_ID iptables -t mangle -A OUTPUT -j CLASH ## 接管转发流量 iptables -t mangle -N CLASH_EXTERNAL iptables -t mangle -F CLASH_EXTERNAL # private local_iptables mangle CLASH_EXTERNAL # avoid rerouting for local docker iptables -t mangle -A CLASH_EXTERNAL -i \u0026#34;$TUN_NAME\u0026#34; -j RETURN # mark iptables -t mangle -A CLASH_EXTERNAL -j MARK --set-xmark $MARK_ID iptables -t mangle -A PREROUTING -j CLASH_EXTERNAL # utun route table ip route replace default dev \u0026#34;$TUN_NAME\u0026#34; table \u0026#34;$TABLE_ID\u0026#34; ip rule add fwmark \u0026#34;$MARK_ID\u0026#34; lookup \u0026#34;$TABLE_ID\u0026#34; # 排除 rp_filter 的故障 反向路由 sysctl -w net.ipv4.conf.\u0026#34;$TUN_NAME\u0026#34;.rp_filter=0 2\u0026gt; /dev/null sysctl -w net.ipv4.conf.all.rp_filter=0 2\u0026gt; /dev/null   参考：\n  Real-IP Tun Example  Clash TUN mode  已知问题  TPROXY 不能用于 OUTPUT 链，无法用于本机代理。在 v2ray 配置透明代理规则中可以通过标记重路由的方式代理本机，但是在clash要对clash源码在socket上标记SO_MARK。查看了openclash源码也没有对UDP TPROXY的解决方法，在使用TPROXY时只能代理本机tcp流量。尝试使用--owner-uid的方式过滤clash发出的流量，但是没有用，可能是与OUTPUT重路由到PREROUTING链不同，原理不清 TUN方式在docker使用时bridge网络无法解析dns到外部网络， 容器(docker)桥接(bridge)模式时的代理问题有相关讨论。fakeip直接启动时不设置只是作为dns网关使用时，docker bridge网络可以正常使用。TCP TPROXY的方式可以bridge网络可正常使用  shell实现参考：\n  shellclash start.sh  OpenClash openclash  clash-premium-installer setup-tun.sh  参考：\n  How to check if a variable is set in Bash?  Clash Premiun Installer  你的 docker stop，它优雅吗？  Unable to trap signals in docker entrypoint script  Linux 网络工具详解之 ip tuntap 和 tunctl 创建 tap/tun 设备  ShellClash  浅谈在代理环境中的 DNS 解析行为  容器(docker)桥接(bridge)模式时的代理问题  Transparent Proxy powered by cgroup v2  相关项目：\n  go Dreamacro/clash  go tun comzyh/clash  rust Trojan-rs  Linux透明代理原理 参考：\n  Linux transparent proxy support  Linux transparent proxy support github  透明代理 UDP 为什么要用 TProxy？  透明代理的基本原理  从 ss-redir 的实现到 Linux NAT  相关工具 配置文件   fake-ip-filter规则  ACL4SSR 分流规则  clash-rules Clash Premium Provider可直接使用  相关项目参考：\n  SS-Rule-Snippet  SSR去广告规则/GFWList规则/Clash规则碎片  clash-rules  注意： clash-rules可能存在google play无法下载的问题，解决方法： Google Play Store Failed to Download in Clash Proxy\n订阅转换subconverter clash提供 Proxy Provider功能，可以方便的分离代理节点为单个url资源，自动更新订阅节点等如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  #port: 8888#socks-port: 8889# ...# proxy provider start hereproxy-providers:hk:type:httppath:./hk.yamlurl:http://remote.lancelinked.icu/files/hk.yamlinterval:3600health-check:enable:trueurl:http://www.gstatic.com/generate_204interval:300us:type:filepath:/home/lance/.clash/provider/us.yamlhealth-check:enable:trueurl:http://www.gstatic.com/generate_204interval:300# proxy provider end#Proxy:# - type: socks5# name: spck# port: 34335# server: 127.0.0.1# udp: true  在使用机场提供的clash文件时通常只会使用到其中的proxies，还有过滤节点等需求，clash不支持过滤节点。而 subconverter提供了订阅转换与过滤等必要的功能\ndocker部署 使用docker安装\n1  docker run -d --restart=always -p 25500:25500 tindy2013/subconverter:latest   subconverter参数：\n1 2 3 4 5 6 7  target=clash\t# 转换结果为 clash 配置 url=xxx\t# 机场订阅链接 include=(TW|台湾|台灣)\t# 只匹配台湾节点 list=true\t# 生成 provider 链接 # 将urlencoded 参数拼接起来得到新的订阅链接——只包含台湾节点的 provider 链接 https://localhost:25500/sub?target=clash\u0026amp;url=https%3a%2f%2fnfnf.xyz%2flink%2fabcdefg%3fmu%3d4\u0026amp;include=(TW%7c%e5%8f%b0%e6%b9%be%7c%e5%8f%b0%e7%81%a3)\u0026amp;list=true   参考：\n  Clash proxy-provider 搭配 subconverter 使用小记  ","permalink":"https://blog.navyd.xyz/post/2021/08/09/clash-transparent-proxy/","summary":"docker部署 在docker内启动时使用iptables操作，stop时清理iptables。 自用docker镜像 NavyD/docker-clash 代理方式 TCP redir + UDP TPROXY re","title":"Clash Transparent Proxy"},{"content":"问题 clash透明代理使用规则发现GOOGLE PLAY商店下载应用一直处于等待中，全局代理能够正常下载。在我的oneplus3t上是可以正常使用play商店的，但是在redmi k40上只能浏览，无法下载，一直处于pending状态。\n相关环境：\n redmi k40 miui 12.5.4 从小米商店下载的 Play Store version: 258.21-19 [0] [PR] 379071060  分析 这个问题持续了2个月，开始遇到时使用oneplus3t上的其它的代理软件如老王、pandavpn测试没有clash环境下play商店是否可用，这两种免费的代理都无法使用，根本没法连接国外网站，测试失败\n还有各种miui无法下载时的搜索问题小米google play一直显示正在下载, miui12 google play 不能下载，基本都是下面这种操作：包括清除下载管理器的缓存，清除googlePlay缓存和数据等\n 打开系统自带的【下载管理】应用 点击【设置】 将【使用迅雷下载引擎】关闭  重新打开Google Play应用商店进行下载或者更新应用  依然不可用。\n有时候感觉就是这么突然，就在今天，可能是之前在什么地方看到过clash与play store的问题，而且是有关clash规则的，也就是我现在正在使用的 clash-rules。\n打开issues中搜索play果然发现了问题：\n根据 clash 规则模式下google play无法下载 #28的方法是services.googleapis.cn没有使用代理，下面是在clash使用play下载时的google连接：\n可以看到最后的services.googleapis.cn确实是直连TCP。\n后记 在这之后，依然存在无法下载的问题，可能是由于下面的神奇操作使得之前的分析不可用：\n 启用clash 进入play store下载更新应用 等待一段时间后一直显示正在下载 断网等待几秒不要退出play store 重连网络可以看到play store开始下载/更新应用  上面这个操作看运气，不具有稳定性，导致代理services.googleapis.cn分析不可用，就连使用全局代理都无法使用。\ngoogle搜索miui12 clash 代理 play store，在这篇文章 关于 Google Play 商店只能浏览不能下载的一点奇怪发现和我的情况十分相似：\n ping 后发现这个网址的 IP 是 203.208 网段的，也就是 Google 部署在中国大陆的 IP 之一。更奇怪的是只有在我使用 HK 线路的时候，哪怕是全局，Play 商店都不能下载更新。一但使用别的地区（ SG/US\u0026hellip;）的网络，Play 商店就正常了。\nGoogle Play 能不能下载及更新只跟机场有关。与手机是否国行，services.googl 去掉 eapis.cn 是否走代理都无关。 好的机场无需任何设置，在国行上也可以下载更新。（小米手机必须关闭迅雷功能）\n一般来说，这个问题发生在香港节点较多。原因的本质是 ip 被谷歌识别为中国 ip 。 （虽然你的 ip 的确是香港的）\n直接的结果是某些谷歌服务不可用。 已知的有 Google Play 无法更新下载。 地图时间轴打开 400，YoutubePremium 不可用。\n判断的方式上面已经有人提过，可以通过以下两个链接：\nhttps://www.google.com/maps/timeline 打开 400 错误表示 ip 被封 https://www.youtube.com/red 网页打开提示“YouTube Premium 在您所在的国家 /地区尚未推出”。在手机上使用链接直接跳转到 YouTube app 里，它会明确地告诉你 YouTube Premium 在中国未推出。\n这种节点无论做什么努力都是无法改变无法使用 Google Play 的本质问题的。只有换节点一个办法。\n 在多次实验后，发现global+iepl专线节点有效，同时，除了HK节点，其它节点都可以在services.googleapis.cn代理下使得play store正常下载\n代理UDP 另外，由于存在另一个services.googleapis.cnUDP连接，尝试了多种方式都无法代理UDP，解析services.googleapis.cn常见ip有：\n1 2 3 4 5 6  120.253.253.98 中国 上海 上海 移动 180.163.150.162 中国 上海 上海 电信 203.208.39.226 中国 北京 北京 谷歌云 203.208.43.66 中国 北京 北京 谷歌云 180.163.150.34 中国 上海 上海 电信 #...   用180.163.150.34尝试在配置文件中添加IP-CIDR,180.163.0.0/16,Proxy但无法对UDP生效。在clash-rules中的 中国大陆 IPv4 地址列表 cncidr.txt规则中存在对该ip的配置\n1 2 3 4 5  rules:#...- GEOIP,,DIRECT- GEOIP,CN,DIRECT- MATCH,Final-Match  什么时候有时间好好研究下\n解决 在clash配置文件中加上DOMAIN,services.googleapis.cn,Proxy，注意Proxy尽量不要使用香港节点如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # ...proxy-groups:- name:Proxytype:selectproxies:# - HK-Test- IEPL-Test- SGP-Test- US-Test- TW-Test- DIRECTrules:- RULE-SET,private,DIRECT- RULE-SET,reject,REJECT# clash 规则模式下google play无法下载 https://github.com/Loyalsoldier/clash-rules/issues/28- DOMAIN,services.googleapis.cn,Proxy- RULE-SET,icloud,Icloud- RULE-SET,apple,Apple- RULE-SET,google,Google- DOMAIN-KEYWORD,epic,Epic- RULE-SET,proxy,Proxy- RULE-SET,direct,DIRECT- RULE-SET,telegramcidr,Telegram- GEOIP,,DIRECT- GEOIP,CN,DIRECT- MATCH,Final-Match  重启clash后可以正常下载应用，这里存在tcp与udp的services.googleapis.cn，tcp的使用了代理\n参考：\n  Loyalsoldier/clash-rules  clash 规则模式下google play无法下载 #28  解决Google Play Store一直「正在等待下载」的问题  小米手机 Google Play 一直等待下载/安装不了软件解决办法  关于 Google Play 商店只能浏览不能下载的一点奇怪发现  Play商店和youtube代理不了 #113  [BUG] Play Store应用无法下载 #478  clash IP-based Rule  ","permalink":"https://blog.navyd.xyz/post/2021/08/09/play-store-failed-to-download-in-clash-proxy/","summary":"问题 clash透明代理使用规则发现GOOGLE PLAY商店下载应用一直处于等待中，全局代理能够正常下载。在我的oneplus3t上是可以正常","title":"Google Play Store Failed to Download in Clash Proxy"},{"content":"问题 从原始博客仓库blog-resources中迁移所有记录到新的hugo博客仓库navyd.github.io新文件夹下content/res中，以后慢慢修改为hugo博客形式。下面是两个仓库的目录结构\n1 2 3 4 5 6 7 8 9 10  ../ - blog-resources/ - .git/ - blog.md - ... - navyd.github.io/ - .git/ - content/ - post/ - ...   分析  git merge\n1 2 3 4 5 6 7 8 9  cd navyd.github.io git checkout -b blog git remote add blog-res ../blog-resources git fetch blog-res --tags git merge --allow-unrelated-histories blog-res/master # or whichever branch you want to merge git remote remove blog-res mv test.md content/res # 移动之前仓库的文件到res中 git commit -m \u0026#39;mv to res folder\u0026#39;   这个方法有个很大的缺点，在merge时会合并到根目录，可能出现冲突，无法自定义合并到子文件夹中，虽然可以提前使用 git-filter-repo命令：git filter-repo --to-subdirectory-filter blog-res，但是ubuntu 20.04无法安装，放弃使用merge的方法\n注意 如果仓库中存在未被git管理的文件，一定要备份好，git reset --hard将会完全覆盖这样的文件，无法找回\n使用git reset --hard \u0026lt;commit_id\u0026gt;回到合并前的状态。如果操作失误出现大量的untracked files，可以使用git clean删除\n1 2 3 4  # 查看可被清除的文件 git clean -n # 删除文件目录 git clean -f -d   如果在merge后想要撤消，但是使用git log找不能合并的记录日志对应的commit id，可以使用git reflog\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  $ git log commit 0504c8037617b01b6c90183a7b8fcdaf71216411 (HEAD -\u0026gt; main, blog) Merge: a30ea67 34cef1f Author: navyd \u0026lt;dhjnavyd@gmail.com\u0026gt; Date: Sun Aug 8 01:39:45 2021 +0800 Add \u0026#39;content/res/\u0026#39; from commit \u0026#39;34cef1f6fe6477181818e55ff468e9a62c7fccbf\u0026#39; git-subtree-dir: content/res git-subtree-mainline: a30ea67efb72183d0d696dc74d9677a98b784035 git-subtree-split: 34cef1f6fe6477181818e55ff468e9a62c7fccbf commit a30ea67efb72183d0d696dc74d9677a98b784035 (origin/main, origin/HEAD) Author: navyd \u0026lt;dhjnavyd@gmail.com\u0026gt; Date: Sat Aug 7 00:26:58 2021 +0800 even主题问题 $ git reflog 0504c80 (HEAD -\u0026gt; main, blog) HEAD@{0}: merge blog: Fast-forward a30ea67 (origin/main, origin/HEAD) HEAD@{1}: reset: moving to a30ea67 c9dc62b HEAD@{2}: reset: moving to HEAD~1 e341955 HEAD@{3}: checkout: moving from blog to main 0504c80 (HEAD -\u0026gt; main, blog) HEAD@{4}: reset: moving to 0504c80 94302ef HEAD@{5}: commit: test 0504c80 (HEAD -\u0026gt; main, blog) HEAD@{6}: reset: moving to 0504c8037617b01b6c90183a7b8fcdaf71216411 a30ea67 (origin/main, origin/HEAD) HEAD@{7}: reset: moving to a30ea67 00dc6b8 HEAD@{8}: commit: mv 1f736a4 HEAD@{9}: reset: moving to 1f736a4272dbd8306d8451bcb9fe5d35ce81878e a30ea67 (origin/main, origin/HEAD) HEAD@{10}: checkout: moving from main to blog e341955 HEAD@{11}: merge blog: Fast-forward a30ea67 (origin/main, origin/HEAD) HEAD@{12}: checkout: moving from blog to main e341955 HEAD@{13}: commit: remove index.md c9dc62b HEAD@{14}: commit: mv to old folder e965a30 HEAD@{15}: merge blog-res/master: Merge made by the \u0026#39;recursive\u0026#39; strategy. a30ea67 (origin/main, origin/HEAD) HEAD@{16}: reset: moving to a30ea67 a30ea67 (origin/main, origin/HEAD) HEAD@{17}: reset: moving to HEAD~ e440e06 HEAD@{18}: merge blog-res/master: Merge made by the \u0026#39;recursive\u0026#39; strategy. a30ea67 (origin/main, origin/HEAD) HEAD@{19}: checkout: moving from main to blog $ git reset --hard id   解决 在这里提到 使用git subtree\n1 2 3 4 5 6 7  cd navyd.github.io git checkout -b blog # 添加blog-resources@master git subtree add --prefix=content/res ../blog-resources master # 合并blog到main分支 git checkout main git merge blog   完成合并log\n1 2 3 4 5 6 7 8 9 10 11  $ git log commit 0504c8037617b01b6c90183a7b8fcdaf71216411 (HEAD -\u0026gt; main, blog) Merge: a30ea67 34cef1f Author: navyd \u0026lt;dhjnavyd@gmail.com\u0026gt; Date: Sun Aug 8 01:39:45 2021 +0800 Add \u0026#39;content/res/\u0026#39; from commit \u0026#39;34cef1f6fe6477181818e55ff468e9a62c7fccbf\u0026#39; git-subtree-dir: content/res git-subtree-mainline: a30ea67efb72183d0d696dc74d9677a98b784035 git-subtree-split: 34cef1f6fe6477181818e55ff468e9a62c7fccbf   参考：\n  How do you merge two Git repositories?  How to remove local (untracked) files from the current Git working tree  Undo a Git merge that hasn\u0026rsquo;t been pushed yet  newren/git-filter-repo  git subtree教程  ","permalink":"https://blog.navyd.xyz/post/2021/08/08/merge-two-git-repos/","summary":"问题 从原始博客仓库blog-resources中迁移所有记录到新的hugo博客仓库navyd.github.io新文件夹下content/r","title":"Merge Two Git Repos"},{"content":"撤消 删除本地最近的commit  How do I undo the most recent local commits in Git?\n1 2 3 4  git commit -m \u0026#34;Something terribly misguided\u0026#34; # (0: Your Accident) git reset HEAD~ # (1) delete commit git add . # (3) git commit -c ORIG_HEAD # (4)   如果之前未存在提交的文件，git reset HEAD~不会删除，只会将文件置为Unstaged changes，即git add前的状态\n删除远程仓库的提交commits  How to permanently remove few commits from remote branch\n1 2  git reset --hard \u0026lt;last_working_commit_id\u0026gt; git push --force   移除git对文件的管理 在添加到.gitignore文件后git不会忽略该文件\n How can I make Git “forget” about a file that was tracked, but is now in .gitignore?\n1 2 3 4  # for file git rm --cached \u0026lt;file\u0026gt; # or for folder git rm -r --cached \u0026lt;folder\u0026gt;   注意不会在之前管理commits中移除该文件，可以在git历史commit中找到，但是在HEAD之后的版本中将不会管理该文件了\n","permalink":"https://blog.navyd.xyz/post/2021/08/06/git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/","summary":"撤消 删除本地最近的commit How do I undo the most recent local commits in Git? 1 2 3 4 git commit -m \u0026#34;Something terribly misguided\u0026#34; # (0: Your Accident) git reset HEAD~ # (1) delete commit git add . # (3) git commit -c ORIG_HEAD # (4) 如果之前未存在提交的文件","title":"git常用操作"},{"content":"问题 使用markdown链接本地文件时，如果文件名包含空格，在链接时可能会出现行为不一致git-submodule-in-hugo/你好%20a.png和git-submodule-in-hugo/你好 a.png在vscode不同的插件中kisstkondoros.vscode-gutter-preview, shd101wyy.markdown-preview-enhanced存在有不同的解析结果，所以不能在文件名中出现空格\n分析 在hugo渲染html时，可能也会出现空格的问题，如当前自定义的layouts/_default/_markup/render-link.html，如果没有使用测试转义，可能导致hasPrefix .Destination $name不一样的情况。当然，应该不会出现这样的情况，毕竟$name与.Destination都是经过hugo转义后的。但是本地不一致的行为影响体验，总之，空格禁用\ngithub action 在github仓库上在hugo build前使用actions检查是否含空格\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  jobs:check:runs-on:ubuntu-20.04steps:- uses:actions/checkout@master- name:Check file names with spacesrun:|# search spaces in all subfolder names if s=$(find content/post | grep \u0026#39; \u0026#39;); then # output to stderr \u0026gt;\u0026amp;2 echo \u0026#34;found spaces in $s\u0026#34; exit 1 fideploy:runs-on:ubuntu-20.04# dependence checkneeds:check#...  参考：\n  Quickstart for GitHub Actions  Creating dependent jobs  ","permalink":"https://blog.navyd.xyz/post/2021/08/06/github-actions-in-hugo/","summary":"问题 使用markdown链接本地文件时，如果文件名包含空格，在链接时可能会出现行为不一致git-submodule-in-hugo/你好%2","title":"github actions in hugo"},{"content":"问题 在使用hugo添加主题时git submodule add https://github.com/olOwOlo/hugo-theme-even themes/even。在push到github后，过了一晚，不知道为啥启动hugo时出现错误：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  ❯ hugo server -D Start building sites … hugo v0.87.0 linux/amd64 BuildDate=unknown WARN 2021/08/06 15:21:17 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;page\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. WARN 2021/08/06 15:21:17 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;home\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. WARN 2021/08/06 15:21:17 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;taxonomy\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. WARN 2021/08/06 15:21:17 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;section\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. WARN 2021/08/06 15:21:17 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;taxonomy\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. | ZH-CN -------------------+-------- Pages | 5 Paginator pages | 0 Non-page files | 6 Static files | 0 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Built in 79 ms Watching for changes in /home/navyd/Workspaces/projects/navyd.github.io/{archetypes,content,layouts} Watching for config changes in /home/navyd/Workspaces/projects/navyd.github.io/config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop WARN 2021/08/06 15:22:00 found no layout file for \u0026#34;HTML\u0026#34; for kind \u0026#34;home\u0026#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. ^C%   分析 搜索后发现themes/even下没有任何文件，使用trash-restore一看，不会是我什么时候删除了？尝试重新添加失败\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  $ l themes/even total 8.0K drwxr-xr-x 2 navyd navyd 4.0K Aug 6 01:11 . drwxr-xr-x 3 navyd navyd 4.0K Aug 6 15:31 .. $ trash-restore 0 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/data 1 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/themes 2 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/themes/even 3 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/index.md 4 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/content 5 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/ .github 6 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/archetypes 7 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/config.toml 8 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/README.md 9 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/static 10 2021-08-06 00:58:32 /home/navyd/Workspaces/projects/navyd.github.io/resources What file to restore [0..10]: $ git submodule add https://github.com/olOwOlo/hugo-theme-even themes/even \u0026#39;themes/even\u0026#39; already exists in the index   尝试移除submodule时git rm -f themes/even出错：fatal: pathspec 'themes/even' did not match any files，幸好github上存在完整的仓库，看下themes/even是否存在\ngithub上的themes/even链接到了原来的even仓库，并不是被删除了。\n解决 如果直接git clone \u0026lt;repo\u0026gt;是不包括submodule的，有两种方式：\n clone时指定：git clone --recurse-submodules -j8 git://github.com/foo/bar.git clone后更新：git submodule update --init --recursive  由于之前因为even操作rm过git本地仓库，为了避免git出现问题，直接从github clone完整的仓库，有一份完整的备份是多么重要！！仓库中只有main分支是原始的hugo文档，另一个gh-pages分支不需要clone。\n一行命令：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  $ git clone -b main --recurse-submodules -j8 git@github.com:NavyD/navyd.github.io.git testgit Cloning into \u0026#39;testgit\u0026#39;... remote: Enumerating objects: 174, done. remote: Counting objects: 100% (174/174), done. remote: Compressing objects: 100% (114/114), done. remote: Total 174 (delta 34), reused 157 (delta 27), pack-reused 0 Receiving objects: 100% (174/174), 803.38 KiB | 863.00 KiB/s, done. Resolving deltas: 100% (34/34), done. Submodule \u0026#39;themes/even\u0026#39; (https://github.com/olOwOlo/hugo-theme-even) registered for path \u0026#39;themes/even\u0026#39; Cloning into \u0026#39;/home/navyd/Workspaces/projects/testgit/themes/even\u0026#39;... remote: Enumerating objects: 1689, done. remote: Total 1689 (delta 0), reused 0 (delta 0), pack-reused 1689 Receiving objects: 100% (1689/1689), 1.74 MiB | 278.00 KiB/s, done. Resolving deltas: 100% (984/984), done. Submodule path \u0026#39;themes/even\u0026#39;: checked out \u0026#39;564697987de962672112b910422682eb6f9c26ba\u0026#39;   参考：\n  How to fix the error found no layout file for “HTML” for “page” in Hugo CMS?  How do I remove a submodule?  Pull git submodules after cloning project from GitHub  How to “git clone” including submodules?  How do I clone a specific Git branch? [duplicate]  ","permalink":"https://blog.navyd.xyz/post/2021/08/06/git-submodule-in-hugo/","summary":"问题 在使用hugo添加主题时git submodule add https://github.com/olOwOlo/hugo-theme-even themes/even。在push到github后，过了一晚，不知道为啥启动hugo时出现错误： 1 2","title":"git submodule in hugo"},{"content":"使用hugo在github搭建静态博客。\n选型 可选类型\n动态博客 比较知名的动态博客工具有下面几种：\n  wordpress  typecho  都是开源项目，wordpress(简称WP)是使用最广泛的，而typecho开发都不是告别活跃\n对于博客项目，稳定是前提\n开源项目参考：\n  WordPress/WordPress  typecho/typecho  部署 在试用WP中，虽然现在可以使用docker方便的部署，我使用raspi4 2GB运行有点不够，运行WP与mysql后仅剩下200M左右，如果再vscode remote连接直接死机，需要开启swap才能正常。\nmarkdown 由于之前都是使用markdown写作，存在100多篇md博文，不可能一一复制到WP中，所以想使用工具批量发布到WP中。在初步使用中没有发现在WP中有方法直接渲染markdown，基本都是md在线编辑器，不符合需求。\n换个方式，使用已经渲染好的html文件发布到WP更好，避免了md的渲染不一致的问题，同时可以使用wp rest api批量更新。\n尝试直接复制使用渲染markdown转换的html不可用，WP的html代码文本编辑器会转义部分代码\n  原始markdown内容\n1 2 3 4 5 6 7 8 9 10  # vim配置  \u0026lt;!-- 去除空格`` ` --\u0026gt; `` `yaml vim: true `` ` 参考：  * [Vim 配置入门](http://www.ruanyifeng.com/blog/2018/09/vimrc.html)    使用markdown-preview-enhanced导出cdn hosted文件 vim_markdown_preview_enhanced.html，下面是部分代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  \u0026lt;!DOCTYPE html\u0026gt;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt; \u0026lt;title\u0026gt;vim\u0026amp;#x914D;\u0026amp;#x7F6E;\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css\u0026#34;\u0026gt; \u0026lt;style\u0026gt; /** * prism.js Github theme based on GitHub\u0026#39;s theme. * @author Sam Clarke */ code[class*=\u0026#34;language-\u0026#34;], pre[class*=\u0026#34;language-\u0026#34;] { color: #333; background: none; font-family: Consolas, \u0026#34;Liberation Mono\u0026#34;, Menlo, Courier, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; word-wrap: normal; line-height: 1.4; -moz-tab-size: 8; -o-tab-size: 8; tab-size: 8; -webkit-hyphens: none; -moz-hyphens: none; -ms-hyphens: none; hyphens: none; }     经过WP转义后 vim_wordpress_esc\n下面是部分代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  \u0026amp;nbsp; \u0026amp;nbsp; \u0026lt;style\u0026gt; /**\u0026lt;br /\u0026gt; * prism.js Github theme based on GitHub\u0026#39;s theme.\u0026lt;br /\u0026gt; * @author Sam Clarke\u0026lt;br /\u0026gt; */\u0026lt;br /\u0026gt; code[class*=\u0026#34;language-\u0026#34;],\u0026lt;br /\u0026gt; pre[class*=\u0026#34;language-\u0026#34;] {\u0026lt;br /\u0026gt; color: #333;\u0026lt;br /\u0026gt; background: none;\u0026lt;br /\u0026gt; font-family: Consolas, \u0026#34;Liberation Mono\u0026#34;, Menlo, Courier, monospace;\u0026lt;br /\u0026gt; text-align: left;\u0026lt;br /\u0026gt; white-space: pre;\u0026lt;br /\u0026gt; word-spacing: normal;\u0026lt;br /\u0026gt; word-break: normal;\u0026lt;br /\u0026gt; word-wrap: normal;\u0026lt;br /\u0026gt; line-height: 1.4;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;-moz-tab-size: 8;\u0026lt;br /\u0026gt; -o-tab-size: 8;\u0026lt;br /\u0026gt; tab-size: 8;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;-webkit-hyphens: none;\u0026lt;br /\u0026gt; -moz-hyphens: none;\u0026lt;br /\u0026gt; -ms-hyphens: none;\u0026lt;br /\u0026gt; hyphens: none;\u0026lt;br /\u0026gt; }\u0026lt;/p\u0026gt;     可以看到title, link等tag被移除转义为\u0026amp;nbsp;，其中\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css\u0026quot;\u0026gt;被移除导致无法正确显示代码高亮；\\n被转义为\u0026lt;br /\u0026gt;。下面有可以解决这两个问题：\n  minifiy html移除所有\\n避免转义：有各种插件可以生成一行的html文件\n  在WP中引用全局外部css。有两种方式\n  在额外css中插入@import url(\u0026quot;//cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css\u0026quot;);   在主题style.css中插入@import url(\u0026quot;//cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css\u0026quot;);     参考：\n  在WordPress中使用Markdown进行写作的正确姿势  WordPress+PublishMarkdown快速构建个人博客  命令行创建和发布 MarkDown 到 WordPress  REST API Handbook  rest api: Posts  How to link external css in wordpress? [closed]  问题 到此，markdown渲染的问题解决了，新的问题出现了，如何批量渲染md文件。vscode markdown-preview-enhanced插件只提供了手动的方式渲染出html，front-matter配置自动导出需要打开预览界面才行，不利于自动化\n1 2 3 4 5 6 7 8 9  ---html:embed_local_images:falseembed_svg:trueoffline:falsetoc:undefinedprint_background:false---  另外，对于不常用的图片，可以base64编码嵌入html文件中，缺点是文件过大，不利于缓存加载，链接形式的图片可以懒加载体验更好\n于是转而寻找自动化工具，在 typora issues中找到答案：Static Site Generator\n参考：\n  Markdown Preview Enhanced docs  Support export Multiple Documents #824  [Summary] Advanced command line interface support #1999  typora issues  静态博客 知名的静态博客工具有：\n  hexo  hugo. A fast, simple \u0026amp; powerful blog framework, powered by Node.js.  jekyll. Jekyll is a blog-aware static site generator in Ruby  选型 hexo使用nodejs开发，hugo使用golang开发，相对更熟悉golang。速度在这里不是重点，nodejs已经足够\n部署方面，由于不是nodejs开发者，需要配置复杂的开发环境，虽然可借助docker在本地使用，但是没有找到可用的docker镜像，能满足需求。hugo部署非常简单，只有一个bin文件，结合git管理与github pages非常方便\n在资源方面，hexo更多，但本着可以折腾golang、轻量博客功能不作过多要求的精神，hugo是理想的选择\nhugo博客  目录管理\ngithub pages部署 在github上使用一个仓库\u0026lt;username\u0026gt;.github.io保存hugo博文与gh-pages。基本配置在 Host on GitHub一致。\n但是要注意 First Deployment with GITHUB_TOKEN，配置完github ations后需要主动创建gh-pages空的分支用于保存在hugo public/中的内容，并在repo settings中将其配置为GitHub Pages的source：\n参考：\n  GitHub Pages action  hugo: Host on GitHub  GitHub Action Hugo setup  定制域名  在dns提供商添加cname解析到gh-pages的域名navyd.github.io。如 阿里云DNS解析控制台  添加域名blog.navyd.xyz内容到static/CNAME文件 根据 Configuring a subdomain指导，在github仓库中添加子域名blog.navyd.xyz并启用https   注意：如果用浏览器打开新域名时提示不安全的证书，可能是缓存了以前使用过的域名证书，使用chrome无痕模式可以正常打开，等待chrome刷新缓存即可\n参考：\n  hugo Use a Custom Domain  About custom domains and GitHub Pages  Q: Custom domain for GitHub project pages  Can github pages CNAME file contain more than one domain?  even主题 主题更改无效 在 Theme Color中提到可以在evne目录中/assets/sass/_variable.scss文件修改主题\n1 2 3 4  // ========== Theme Color ========== // // Config here to change theme color // Default | Mint Green | Cobalt Blue | Hot Pink | Dark Violet $theme-color-config: \u0026#39;Dark Violet\u0026#39;;   如果未生效可能是由于hugo不是extend版本，使用--tags extended重新编译\n1 2 3 4 5 6 7 8  $ hugo version hugo v0.87.0 linux/amd64 BuildDate=unknown # 在hugo源码内重编译 $ CGO_ENABLED=1 go install --tags extended $ hugo version hugo v0.87.0+extended linux/amd64 BuildDate=unknown     怎么更该了主题/assets/sass/_variable.scss 颜色值没发生改变是怎么回事  Build and Install the Binaries from Source (Advanced Install)  even Installation  submodule无法修改 由于使用了git submodle将even作为项目的子模块，现在要修改/assets/sass/_variable.scss文件，但是无法完成。如果之后无法找到解决方法，只有使用clone而不是作为submodule\n启用点击统计 even支持不蒜子统计站点访问量\n1 2 3 4 5  [params.busuanzi] # count web traffic by busuanzi # 是否使用不蒜子统计站点访问量 enable = true siteUV = true sitePV = true pagePV = true   主站统计\n文章访问统计\n启用utterances评论 utterances 是依托于 github repository 的 issues 建立的评论功能\n  点击 GitHub App utterances为github pages仓库navyd.github.io安装   选择使用utterances评论的仓库   在even配置中启用utterances\n1 2 3  [params.utterances] # https://utteranc.es/ owner = \u0026#34;navyd\u0026#34; # Your GitHub ID repo = \u0026#34;navyd.github.io\u0026#34; # The repo to store comments     启动hugo server -D本地查看效果   参考：\n  hugo博客使用 utterances 作为评论系统  utterances  Hugo 主题 Even 的自定义配置  多层toc 1 2 3  [markup.tableOfContents] startLevel = 1 endLevel = 6   配置前：\n配置后：\n参考：\n  Hugo 相关部署操作  CONTENT MANAGEMENT Table of Contents  Configure Markup  配置 忽略渲染部分文件 在输出中发现非hugo配置的md文件被渲染，实际不需要渲染生成这些文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  $ hugo --debug Start building sites … hugo v0.87.0 linux/amd64 BuildDate=unknown INFO 2021/08/27 19:47:43 syncing static files to /home/navyd/Workspaces/projects/navyd.github.io/public/ DEBUG 2021/08/27 19:47:43 Render page Cargo Doc Open Does Not Work in Wsl to \u0026#34;/post/rust/cargo-doc-open-does-not-work-in-wsl/index.html\u0026#34; DEBUG 2021/08/27 19:47:43 found menu: \u0026#34;main\u0026#34;, in site config DEBUG 2021/08/27 19:47:43 found menu: \u0026#34;main\u0026#34;, in site config DEBUG 2021/08/27 19:47:43 found menu: \u0026#34;main\u0026#34;, in site config DEBUG 2021/08/27 19:47:43 found menu: \u0026#34;main\u0026#34;, in site config DEBUG 2021/08/27 19:47:43 Render page to \u0026#34;/res/docker/docker更换国内镜像/index.html\u0026#34; DEBUG 2021/08/27 19:47:43 Render page to \u0026#34;/res/docker/docker构建容器/index.html\u0026#34; # ... | ZH-CN -------------------+-------- Pages | 155 Paginator pages | 3 Non-page files | 175 Static files | 39 Processed images | 0 Aliases | 17 Sitemaps | 1 Cleaned | 0 Total in 391 ms   1 2 3 4 5 6 7  # baseURL = \u0026#34;https://blog.navyd.xyz/\u0026#34; # languageCode = \u0026#34;en\u0026#34; # ... ignoreFiles = [\u0026#39;content/res/*\u0026#39;] # [permalinks] #...   参考：\n  Ignore Content and Data Files when Rendering  修改首页博文list排序 覆盖主题中提供的list模板如themes/\u0026lt;your-theme\u0026gt;/layouts/_default/list.html，放到layouts/_default/list.html中，修改其中的关键变量.Pages，hugo在这 Lists of Content in Hugo#Order Content提供了多种方式排序，默认为Weight \u0026gt; Date \u0026gt; LinkTitle \u0026gt; FilePath\n参考：\n  Lists of Content in Hugo#Order Content  Sorting paginated pages by date  TEMPLATES Pagination List Paginator Pages  VARIABLES AND PARAMS Page Variables The .Pages Variable  Content Summaries 使用\u0026lt;!--more--\u0026gt;控制渲染md显示文章简介\n参考：\n  CONTENT MANAGEMENT Content Summaries ","permalink":"https://blog.navyd.xyz/post/2021/08/06/myblog/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://d33wubrfki0l68.cloudfront.net/c38c7334cc3f23585738e40334284fddcaf03d5e/2e17c/images/hugo-logo-wide.svg\" alt=\"\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e使用hugo在github搭建静态博客。\u003c/p\u003e","title":"my hugo blog"}]